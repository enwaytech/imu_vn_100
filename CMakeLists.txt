cmake_minimum_required(VERSION 2.8.3)
project(imu_vn_100)

set(CMAKE_CXX_FLAGS "-std=gnu++11")

find_package(catkin REQUIRED COMPONENTS
  roscpp
  sensor_msgs
  diagnostic_updater
  tf2
)

find_package(Boost REQUIRED)


catkin_package(
  INCLUDE_DIRS include vncpplib/include
  LIBRARIES imu_vn_100
  CATKIN_DEPENDS diagnostic_updater roscpp sensor_msgs tf2
  DEPENDS Boost
)

include_directories(
  include
  vncpplib/include
  ${catkin_INCLUDE_DIRS}
)

add_library(imu_vn_100
  vncpplib/src/arch/linux/vncp_services.c
  vncpplib/src/vndevice.c
  vncpplib/src/vn100.c
  src/imu_vn_100.cpp
)
target_link_libraries(imu_vn_100
  ${catkin_LIBRARIES}
)
add_dependencies(imu_vn_100
  ${${PROJECT_NAME}_EXPORTED_TARGETS}
  ${catkin_EXPORTED_TARGETS}
)

add_executable(imu_vn_100_cont_node
  src/imu_vn_100_cont.cpp)
target_link_libraries(imu_vn_100_cont_node
  ${catkin_LIBRARIES}
  imu_vn_100
)
add_dependencies(imu_vn_100_cont_node
  ${${PROJECT_NAME}_EXPORTED_TARGETS}
  ${catkin_EXPORTED_TARGETS}
)

install(TARGETS imu_vn_100 imu_vn_100_cont_node
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
)

install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
  FILES_MATCHING PATTERN "*.h**"
)

install(DIRECTORY launch
        DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
)
